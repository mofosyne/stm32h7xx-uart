##########################################################################################################################
# File automatically-generated by tool: [projectgenerator] version: [3.6.0] date: [Tue Jan 14 20:20:47 AEDT 2020] 
##########################################################################################################################

# ------------------------------------------------
# Generic Makefile (based on gcc)
#
# ChangeLog :
# 2017-02-10 - Several enhancements + project update mode
#   2015-07-22 - first version
# ------------------------------------------------

######################################
# target
######################################
TARGET = maketest


######################################
# building variables
######################################
# debug build?
DEBUG = 1
# optimization
OPT = -Og


#######################################
# paths
#######################################
# Build path
BUILD_DIR = build

######################################
# source
######################################
# C sources
C_SOURCES =  \
Src/main.c \
Src/stm32h7xx_it.c \
Src/stm32h7xx_hal_msp.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth_ex.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc_ex.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_gpio.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma_ex.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_pwr.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_pwr_ex.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c_ex.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_exti.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_tim.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_tim_ex.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_pcd.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_pcd_ex.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_ll_usb.c \
Src/system_stm32h7xx.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_crc.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_crc_ex.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c

C_SOURCES += Src/uart_test.c
C_SOURCES += Src/logger.c

# ASM sources
ASM_SOURCES =  \
startup_stm32h743xx.s


#######################################
# binaries
#######################################
PREFIX = arm-none-eabi-
# The gcc compiler bin path can be either defined in make command via GCC_PATH variable (> make GCC_PATH=xxx)
# either it can be added to the PATH environment variable.
ifdef GCC_PATH
CC = $(GCC_PATH)/$(PREFIX)gcc
AS = $(GCC_PATH)/$(PREFIX)gcc -x assembler-with-cpp
CP = $(GCC_PATH)/$(PREFIX)objcopy
SZ = $(GCC_PATH)/$(PREFIX)size
else
CC = $(PREFIX)gcc
AS = $(PREFIX)gcc -x assembler-with-cpp
CP = $(PREFIX)objcopy
SZ = $(PREFIX)size
endif
HEX = $(CP) -O ihex
BIN = $(CP) -O binary -S

#######################################
# CFLAGS
#######################################
# cpu
CPU = -mcpu=cortex-m7

# fpu
FPU = -mfpu=fpv5-d16

# float-abi
FLOAT-ABI = -mfloat-abi=hard

# mcu
MCU = $(CPU) -mthumb $(FPU) $(FLOAT-ABI)

# macros for gcc
# AS defines
AS_DEFS =

# C defines
C_DEFS =  \
-DUSE_HAL_DRIVER \
-DSTM32H743xx


# AS includes
AS_INCLUDES =

# C includes
C_INCLUDES =  \
-IInc \
-IDrivers/STM32H7xx_HAL_Driver/Inc \
-IDrivers/STM32H7xx_HAL_Driver/Inc/Legacy \
-IDrivers/CMSIS/Device/ST/STM32H7xx/Include \
-IDrivers/CMSIS/Include


# compile gcc flags
ASFLAGS = $(MCU) $(AS_DEFS) $(AS_INCLUDES) $(OPT) -Wall -fdata-sections -ffunction-sections

CFLAGS = $(MCU) $(C_DEFS) $(C_INCLUDES) $(OPT) -Wall -fdata-sections -ffunction-sections

ifeq ($(DEBUG), 1)
CFLAGS += -g -gdwarf-2
endif


# Generate dependency information
CFLAGS += -MMD -MP -MF"$(@:%.o=%.d)"


#######################################
# LDFLAGS
#######################################
# link script
LDSCRIPT = STM32H743ZITx_FLASH.ld

# libraries
LIBS = -lc -lm -lnosys
LIBDIR =
LDFLAGS = $(MCU) -specs=nano.specs -T$(LDSCRIPT) $(LIBDIR) $(LIBS) -Wl,-Map=$(BUILD_DIR)/$(TARGET).map,--cref -Wl,--gc-sections

# default action: build all
all: $(BUILD_DIR)/$(TARGET).elf $(BUILD_DIR)/$(TARGET).hex $(BUILD_DIR)/$(TARGET).bin


#######################################
# build the application
#######################################
# list of objects
OBJECTS = $(addprefix $(BUILD_DIR)/,$(notdir $(C_SOURCES:.c=.o)))
vpath %.c $(sort $(dir $(C_SOURCES)))
# list of ASM program objects
OBJECTS += $(addprefix $(BUILD_DIR)/,$(notdir $(ASM_SOURCES:.s=.o)))
vpath %.s $(sort $(dir $(ASM_SOURCES)))

$(BUILD_DIR)/%.o: %.c Makefile | $(BUILD_DIR)
	$(CC) -c $(CFLAGS) -Wa,-a,-ad,-alms=$(BUILD_DIR)/$(notdir $(<:.c=.lst)) $< -o $@

$(BUILD_DIR)/%.o: %.s Makefile | $(BUILD_DIR)
	$(AS) -c $(CFLAGS) $< -o $@

$(BUILD_DIR)/$(TARGET).elf: $(OBJECTS) Makefile
	$(CC) $(OBJECTS) $(LDFLAGS) -o $@
	$(SZ) $@

$(BUILD_DIR)/%.hex: $(BUILD_DIR)/%.elf | $(BUILD_DIR)
	$(HEX) $< $@

$(BUILD_DIR)/%.bin: $(BUILD_DIR)/%.elf | $(BUILD_DIR)
	$(BIN) $< $@

$(BUILD_DIR):
	mkdir $@

#######################################
# clean up
#######################################
clean:
	-rm -fR $(BUILD_DIR)


#######################################
# Custom Flags (Not Autogenerated)
#######################################

# Enable C99 (gcc C std default is C90)
CFLAGS += -std=c99

# Good Practices
# (Check all warnings `-Wall` and make all warnings and throw error `-Werror` )
CFLAGS += -Wall -Wpointer-arith -Werror


#######################################
# SWD
#######################################
BIN_IMAGE = $(BUILD_DIR)/$(TARGET).elf

# make swd (OpenOCD CLI Telnet server on TCP port 4444)
swd: all
	arm-none-eabi-gdb -x gdbinit_stm32h7xx $(BIN_IMAGE)
	@echo "--------------- openocd.log (First 20 lines) ---------------------"
	@head -20 /tmp/openocd.log

# make swd-attach
swd-attach: all
	arm-none-eabi-gdb -x boards/gdbinit_stm32h7xx_attach $(BIN_IMAGE)
	@echo "--------------- openocd.log (First 20 lines) ---------------------"
	@head -20 /tmp/openocd.log

# make swd-console
swd-console: all
	@echo "--------------- WARN: Must have semihost enabled FW ------------------"
	/usr/local/bin/openocd                                                       \
		-s /usr/local/share/openocd/scripts                                        \
		-f /usr/local/share/openocd/scripts/interface/stlink.cfg                   \
		-f /usr/local/share/openocd/scripts/target/stm32h7x_dual_bank.cfg          \
		-c "init; arm semihosting enable; log_output /tmp/openocd.log; reset run;"
	@echo "--------------- openocd.log (First 20 lines) ---------------------"
	@head -20 /tmp/openocd.log

# make swd-load
swd-load: all
	/usr/local/bin/openocd                                                       \
		-f /usr/local/share/openocd/scripts/interface/stlink.cfg                   \
		-f /usr/local/share/openocd/scripts/target/stm32h7x_dual_bank.cfg          \
		-c "log_output /tmp/openocd.log"                                           \
		-c init                                                                    \
		-c "reset halt"                                                            \
		-c "flash write_image erase ${BIN_IMAGE}"                                  \
		-c "verify_image ${BIN_IMAGE}"                                             \
		-c reset                                                                   \
		-c shutdown
	@echo "--------------- openocd.log (First 20 lines) ---------------------"
	@head -20 /tmp/openocd.log

# make swd-gdbgui
swd-gdbgui: all
	gdbgui --gdb-args="-x gdbinit_stm32h7xx" $(BIN_IMAGE)
	@echo "--------------- openocd.log (First 20 lines) ---------------------"
	@head -20 /tmp/openocd.log

# make swd-gdbgui-attached
swd-gdbgui-attached: all
	gdbgui --gdb-args="-x gdbinit_stm32h7xx_attach" $(BIN_IMAGE)
	@echo "--------------- openocd.log (First 20 lines) ---------------------"
	@head -20 /tmp/openocd.log


##################################################
# CI Auto Package (Not Typically Used During Dev)
##################################################
ifdef GCC_PATH
STRIP = $(GCC_PATH)/$(PREFIX)strip
STRINGS = $(GCC_PATH)/$(PREFIX)strings
else
STRIP = $(PREFIX)strip
STRINGS = $(PREFIX)strings
endif

$(BUILD_DIR)/$(TARGET).pub.elf: $(BUILD_DIR)/$(TARGET).elf
	$(Q)$(STRIP) $< -o $@
	$(Q)$(SZ) $@

$(BUILD_DIR)/$(TARGET).pub.bin: $(BUILD_DIR)/$(TARGET).pub.elf
	$(Q)$(CP) -O binary $< $@

$(BUILD_DIR)/$(TARGET).pub.hex: $(BUILD_DIR)/$(TARGET).pub.elf
	$(Q)$(CP) -O ihex $< $@

zipped_public_release: $(BUILD_DIR)/$(TARGET).pub.elf $(BUILD_DIR)/$(TARGET).pub.hex $(BUILD_DIR)/$(TARGET).pub.bin
	@echo "zipping up binary releases (symbol table stripped)";
	mkdir -p $(BUILD_DIR)/pub_release/
	cp $(BUILD_DIR)/$(TARGET).pub.elf                $(BUILD_DIR)/pub_release/
	cp $(BUILD_DIR)/$(TARGET).pub.bin                $(BUILD_DIR)/pub_release/
	cp $(BUILD_DIR)/$(TARGET).pub.hex                $(BUILD_DIR)/pub_release/
	cp gdbinit_stm32h7xx                             $(BUILD_DIR)/pub_release/gdbinit_stm32h7xx
	cp gdbinit_stm32h7xx_attach                      $(BUILD_DIR)/pub_release/gdbinit_stm32h7xx_attach
	cp Makefile_ci_assist.make                       $(BUILD_DIR)/pub_release/Makefile

zipped_internal_release:
	@echo "zipping up binary releases (has symbol table)";
	mkdir -p $(BUILD_DIR)/prv_release/
	cp $(BUILD_DIR)/$(TARGET).elf                    $(BUILD_DIR)/prv_release/
	cp $(BUILD_DIR)/$(TARGET).bin                    $(BUILD_DIR)/prv_release/
	cp $(BUILD_DIR)/$(TARGET).hex                    $(BUILD_DIR)/prv_release/
	cp $(BUILD_DIR)/$(TARGET).map                    $(BUILD_DIR)/prv_release/
	cp STM32H743XIHx_FLASH.ld                        $(BUILD_DIR)/prv_release/
	cp gdbinit_stm32h7xx                             $(BUILD_DIR)/prv_release/gdbinit_stm32h7xx
	cp gdbinit_stm32h7xx_attach                      $(BUILD_DIR)/prv_release/gdbinit_stm32h7xx_attach
	cp Makefile_ci_assist.make                       $(BUILD_DIR)/prv_release/Makefile


#######################################
# dependencies
#######################################
-include $(wildcard $(BUILD_DIR)/*.d)

# *** EOF ***
